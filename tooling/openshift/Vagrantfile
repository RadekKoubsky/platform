$vmMemory = Integer(ENV['VM_MEMORY'] || 6000)

# Override the default VM name appearing within VirtualBox
$vmName = ENV['VM_NAME'] || "centos7-openshift"

# Private IP address to be used between the Host and the Guest but also the Openshift Server
$vmPrivateIP = ENV['VM_PRIVATE_IP'] || "172.28.128.4"


$provisionScript = <<SCRIPT
HOST_IP=${1:-172.28.128.4} # Host IP

echo "===================================================="
echo "IP Address to be used : $HOST_IP"
echo "===================================================="

echo "===================================================="
echo "Setup variables"
echo "===================================================="
OPENSHIFT_DIR=/opt/openshift-origin-v1.4
OPENSHIFT=/opt/openshift-origin-v1.4
OPENSHIFT_VERSION=v1.4.0-rc1

OC_CLIENT_FILE=openshift-origin-client-tools-v1.4.0-rc1
# 1.4.rc1 --> OC_URL=https://github.com/openshift/origin/releases/download/v1.4.0-rc1/openshift-origin-client-tools-v1.4.0-rc1.b4e0954-linux-64bit.tar.gz
OC_URL=https://github.com/openshift/origin/releases/download/v1.4.0/openshift-origin-client-tools-v1.4.0-208f053-linux-64bit.tar.gz
# 1.4.rc1 --> OPENSHIFT_URL=https://github.com/openshift/origin/releases/download/v1.4.0-rc1/openshift-origin-server-v1.4.0-rc1.b4e0954-linux-64bit.tar.gz
OPENSHIFT_URL=https://github.com/openshift/origin/releases/download/v1.4.0/openshift-origin-server-v1.4.0-208f053-linux-64bit.tar.gz

TEMP_DIR=/home/tmp
REGISTRY_DIR=/opt/openshift-registry

echo "===================================================="
echo "Clean directories & create them"
echo "===================================================="
rm -rf {$TEMP_DIR,$OPENSHIFT_DIR/openshift.local.config,$OPENSHIFT_DIR/openshift.local.etcd,$REGISTRY_DIR} && mkdir -p {$TEMP_DIR,$OPENSHIFT_DIR,$REGISTRY_DIR}
chmod 755 /opt $OPENSHIFT_DIR

echo "===================================================="
echo "Install OpenShift Client"
echo "===================================================="
cd $TEMP_DIR && mkdir $OC_CLIENT_FILE && cd $OC_CLIENT_FILE
curl -kOL $OC_URL
tar -zxf openshift-origin-client-*.tar.gz --strip-components=1 && cp oc /usr/local/bin

echo "===================================================="
echo "Get OpenShift Binaries"
echo "===================================================="
cd $OPENSHIFT_DIR && curl -kOL $OPENSHIFT_URL
tar -zxvf openshift-origin-server-*.tar.gz --strip-components=1
rm -f openshift-origin-server-*.tar.gz

echo "===================================================="
echo "Set and load environments"
echo "===================================================="
cat > /etc/profile.d/openshift.sh << __EOF__
export OPENSHIFT=$OPENSHIFT
export OPENSHIFT_VERSION=$OPENSHIFT_VERSION
export PATH=$OPENSHIFT:$PATH
export KUBECONFIG=$OPENSHIFT/openshift.local.config/master/admin.kubeconfig
export CURL_CA_BUNDLE=$OPENSHIFT/openshift.local.config/master/ca.crt
__EOF__
chmod 755 /etc/profile.d/openshift.sh
. /etc/profile.d/openshift.sh

echo "===================================================="
echo "Prefetch docker images"
echo "===================================================="
docker pull openshift/origin-pod:$OPENSHIFT_VERSION
docker pull openshift/origin-sti-builder:$OPENSHIFT_VERSION
docker pull openshift/origin-docker-builder:$OPENSHIFT_VERSION
docker pull openshift/origin-deployer:$OPENSHIFT_VERSION
docker pull openshift/origin-docker-registry:$OPENSHIFT_VERSION
docker pull openshift/origin-haproxy-router:$OPENSHIFT_VERSION

echo "===================================================="
echo "Generate OpenShift V3 configuration files"
echo "===================================================="
$OPENSHIFT/openshift start --master=$HOST_IP --cors-allowed-origins=.* --hostname=$HOST_IP --write-config=openshift.local.config
chmod +r $OPENSHIFT/openshift.local.config/master/admin.kubeconfig
chmod +r $OPENSHIFT/openshift.local.config/master/openshift-registry.kubeconfig
chmod +r $OPENSHIFT/openshift.local.config/master/openshift-router.kubeconfig

echo "===================================================="
echo "Change default domain and replace 0.0.0.0 with the IP address"
echo "===================================================="
sed -i "s/router.default.svc.cluster.local/$HOST_IP.xip.io/" $OPENSHIFT/openshift.local.config/master/master-config.yaml

echo "===================================================="
echo "Stop/Disable Firewall"
echo "===================================================="
chkconfig iptables off
systemctl disable firewalld
systemctl stop firewalld

echo "===================================================="
echo "Configure Openshift service & launch it"
echo "===================================================="
cat > /etc/systemd/system/openshift-origin.service << __EOF__
[Unit]
Description=Origin Service
After=docker.service
Requires=docker.service

[Service]
Restart=always
RestartSec=10s
ExecStart=/opt/openshift-origin-v1.4/openshift start --public-master=https://$HOST_IP:8443 --master-config=/opt/openshift-origin-v1.4/openshift.local.config/master/master-config.yaml --node-config=/opt/openshift-origin-v1.4/openshift.local.config/node-$HOST_IP/node-config.yaml
WorkingDirectory=/opt/openshift-origin-v1.4

[Install]
WantedBy=multi-user.target
__EOF__

systemctl daemon-reload
systemctl enable openshift-origin
systemctl start openshift-origin

if [ "$host_ip" != "172.28.128.4" ]; then
  echo "===================================================="
  echo "Add external nameserver & restart docker"
  echo "===================================================="
  echo 'nameserver 8.8.8.8' >>  /etc/resolv.conf
  service docker restart
fi

SCRIPT

Vagrant.configure("2") do |config|
  # Community Centos Box
  config.vm.box = "centos/7"

  # Atomic Centos Box
  # config.vm.box = "centos/atomic-host"

  # OpenShift Origin Box
  # config.vm.box = "openshift/origin-all-in-one"

  # Top level domain
  $tld = "vagrant.ocp"

  config.landrush.enabled = true
  config.landrush.tld = $tld
  config.landrush.guest_redirect_dns = false
  config.landrush.host_ip_address = $vmPrivateIP

  config.vm.network "private_network", ip: $vmPrivateIP
  config.vm.hostname = $tld

  config.vm.provider "virtualbox" do |v|
    v.memory = $vmMemory
    v.cpus = 2
    v.name = $vmName
  end

  config.vm.provision "shell" do |s|
    s.path       = "./provision-openshift.sh"
    s.keep_color = "true"
    s.args       = ["$vmPrivateIP"] # Argument used within the script to setup the IP address of the host
  end

  config.vm.provision "shell", path: "./create_accounts_registry_router.sh", keep_color: "true"

  # TESTED WITH ATOMIC : config.vm.provision "shell", inline: $provisionScript, keep_color: true

end